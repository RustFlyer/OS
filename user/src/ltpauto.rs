pub mod ltprun {
    extern crate alloc;
    use crate::run_cmd;
    use alloc::{format, vec::Vec};

    #[allow(non_snake_case)]
    pub fn autorun() {
        let TESTCASES = Vec::from([
            "name_to_handle_at01",
"name_to_handle_at02",
"nanosleep01",
"nanosleep02",
"nanosleep04",
"net_cmdlib.sh",
"netns_breakns.sh",
"netns_comm.sh",
"netns_lib.sh",
"netns_netlink",
"netns_sysfs.sh",
"netstat01.sh",
"netstress",
"newuname01",
"nextafter01",
"nfs01.sh",
"nfs01_open_files",
"nfs02.sh",
"nfs03.sh",
"nfs04.sh",
"nfs04_create_file",
"nfs05.sh",
"nfs05_make_tree",
"nfs06.sh",
"nfs07.sh",
"nfs08.sh",
"nfs09.sh",
"nfs_flock",
"nfs_flock_dgen",
"nfs_lib.sh",
"nfslock01.sh",
"nfsstat01.sh",
"nft01.sh",
"nft02",
"nftw01",
"nftw6401",
"nice01",
"nice02",
"nice03",
"nice04",
"nice05",
"nm01.sh",
"nptl01",
"ns-echoclient",
"ns-icmp_redirector",
"ns-icmpv4_sender",
"ns-icmpv6_sender",
"ns-igmp_querier",
"ns-mcast_join",
"ns-mcast_receiver",
"ns-tcpclient",
"ns-tcpserver",
"ns-udpclient",
"ns-udpsender",
"ns-udpserver",
"numa01.sh",
"oom01",
"oom02",
"oom03",
"oom04",
"oom05",
"open01",
"open02",
"open03",
"open04",
"open06",
"open07",
"open08",
"open09",
"open10",
"open11",
"open12",
"open12_child",
"open13",
"open14",
"open_by_handle_at01",
"open_by_handle_at02",
"open_tree01",
"open_tree02",
"openat01",
"openat02",
"openat02_child",
"openat03",
"openat04",
"openat201",
"openat202",
"openat203",
"openfile",
"output_ipsec_conf",
"overcommit_memory",
        ]);

        for test in TESTCASES {
            let cmd = format!("ltp/testcases/bin/{}", test);
            println!("------------------------------- \n \
                    Running testcase: {} \n \
                    -------------------------------", cmd);
            run_cmd(&cmd);
        }
    }
}
